name: Pad_2_Pro_Kernel
on:
  workflow_dispatch:
    inputs:
      enable_feature_kpm:
        description: "KPM"
        required: false
        default: true
        type: boolean
      enable_feature_bbr:
        description: "BBR"
        required: false
        default: true
        type: boolean

jobs:
  build:
    name: Build_Pad_2_Pro_Kernel
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
      CCACHE_MAXSIZE: 8G
    steps:
      - uses: actions/checkout@v4
        with:
          # Get the full Git history
          fetch-depth: 0

      - name: ‚öôÔ∏è ËÆæÁΩÆÂÖ®Â±ÄÁéØÂ¢ÉÂèòÈáè (Set Global Environment Variables)
        run: |
          echo "ENABLE_KPM=${{ github.event.inputs.enable_feature_kpm }}" >> $GITHUB_ENV
          echo "ENABLE_BBR=${{ github.event.inputs.enable_feature_bbr }}" >> $GITHUB_ENV
          echo "DEVICE_NAME=oneplus_pad_2_pro" >> $GITHUB_ENV
          echo "KERNEL_TIME=Tue Mar 4 09:04:13 UTC 2025" >> $GITHUB_ENV
          echo "DEFAULT_SUFFIX=-android15-8-g302cb15749a8-ab13157299-4k" >> $GITHUB_ENV

      - name: ‚öôÔ∏è ËÆæÁΩÆÁºìÂ≠òË∑ØÂæÑ (Set Cache Path)
        run: |
          echo "CCACHE_DIR=$HOME/.ccache_$DEVICE_NAME" >> $GITHUB_ENV

      - name: üì• ËÆæÁΩÆ‰∏ãËΩΩË¥¶Êà∑ (Set Download Account)
        run: |
          git config --global user.name "MoranOrz"
          git config --global user.email "authorz@aliyun.com"

      - name: üõ†Ô∏è ÈÖçÁΩÆ APT ÁºìÂ≠ò (Configure APT Cache)
        run: |
          APT_CACHE_DIR="$HOME/apt-cache"
          mkdir -p "$APT_CACHE_DIR"/{archives,lists/partial}
          echo "Dir::Cache \"$APT_CACHE_DIR\";" | sudo tee /etc/apt/apt.conf.d/90user-cache
          echo "Dir::Cache::archives \"$APT_CACHE_DIR/archives\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
          echo "Dir::State::lists \"$APT_CACHE_DIR/lists\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
          echo "Acquire::Check-Valid-Until \"false\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
          echo "Acquire::Languages \"none\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
          sudo chown -R $USER:$USER "$APT_CACHE_DIR"

      - name: üõ†Ô∏è ÁºìÂ≠ò APT ÂåÖ (Cache APT Packages)
        uses: actions/cache@v4
        with:
          path: ${{ env.HOME }}/apt-cache
          key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/build_ak3.yml') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: üì• ÂÆâË£Ö APT ‰æùËµñ (Install APT Dependencies)
        run: |
          sudo rm -f /var/lib/apt/lists/lock /var/lib/dpkg/lock
          APT_CACHE_DIR="$HOME/apt-cache"
          mkdir -p "$APT_CACHE_DIR/lists/partial"
          sudo apt -o Dir::Cache="$APT_CACHE_DIR" update -qq
          sudo DEBIAN_FRONTEND=noninteractive apt -o Dir::Cache="$APT_CACHE_DIR" install -yq --no-install-recommends \
            python3 p7zip-full git curl ccache libelf-dev \
            build-essential flex bison libssl-dev \
            libncurses-dev liblz4-tool zlib1g-dev \
            libxml2-utils rsync unzip
          echo "‚úÖ ÂÆâË£ÖÂÆåÊàê"

      - name: üì• ÊÅ¢Â§çÁºìÂ≠ò (Restore Ccache)
        uses: actions/cache@v4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ runner.os }}-${{ github.ref }}-${{ env.DEVICE_NAME }}
          restore-keys: |
            ccache-${{ runner.os }}-${{ env.DEVICE_NAME }}-
            ccache-${{ runner.os }}-

      - name: üõ†Ô∏è ÂàùÂßãÂåñ cache (Initialize Cache)
        run: |
          INIT_FLAG="${{ env.CCACHE_DIR }}/.ccache_initialized"
          if command -v ccache >/dev/null 2>&1; then
            if [ ! -f "$INIT_FLAG" ]; then
              echo "ÂàùÂßãÂåñ ccache (${{ env.CCACHE_DIR }})..."
              mkdir -p "${{ env.CCACHE_DIR }}"
              ccache -M ${{ env.CCACHE_MAXSIZE }}
              touch "$INIT_FLAG"
              echo "‚úîÔ∏è ccache ÂàùÂßãÂåñÂÆåÊàê"
            else
              echo "‚úîÔ∏è ccache Â∑≤ÂàùÂßãÂåñÔºåË∑≥Ëøá"
            fi
          else
            echo "‚ùå Êú™ÂÆâË£Ö ccacheÔºåË∑≥Ëøá"
          fi
          ccache -s

      - name: ü§ñ ÊòæÁ§∫ÁºìÂ≠òÁä∂ÊÄÅ (Display Cache Status)
        run: |
          echo "APTÁºìÂ≠òÂëΩ‰∏≠: ${{ steps.apt-cache.outputs.cache-hit }}"
          echo "ccacheÁºìÂ≠òÂëΩ‰∏≠: ${{ steps.ccache-cache.outputs.cache-hit }}"

      - name: üì• ÂÆâË£Ö repo Â∑•ÂÖ∑ (Install Repo Tool)
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: üì• ÂàùÂßãÂåñ repo Âπ∂ÂêåÊ≠•ÂÜÖÊ†∏Ê∫êÁ†Å (Initialize Repo and Sync)
        run: |
          mkdir kernel_workspace && cd kernel_workspace
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/sm8750 -m ${{ env.DEVICE_NAME }}.xml --depth=1
          repo --trace sync -c -j$(nproc --all) --no-tags
          rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
          rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"

      - name: ‚öôÔ∏è ÈõÜÊàê SukiSU Ultra (Integrate SukiSU Ultra)
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/susfs-main/kernel/setup.sh" -o setup.sh && bash setup.sh susfs-main
          cd ./KernelSU
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) "+" 10700)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          export KSU_VERSION=$KSU_VERSION
          sed -i "s/DKSU_VERSION=12800/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
      
      - name: ‚öôÔ∏è ÈõÜÊàê SUSFS (Integrate SUSFS)
        run: |
          cd kernel_workspace
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android15-6.6
          git clone https://github.com/SukiSU-Ultra/SukiSU_patch.git

          cd kernel_platform
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-android15-6.6.patch ./common/
          cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/

          # Apply patches
          cd ./common
          patch -p1 < 50_add_susfs_in_gki-android15-6.6.patch || true
          
          cp ../../SukiSU_patch/hooks/syscall_hooks.patch ./
          patch -p1 -F 3 < syscall_hooks.patch
          echo "‚úîÔ∏è SUSFS patches applied successfully"
      
      - name: ‚öôÔ∏è ÁºìÂ≠ò HMBird Ë°•‰∏Å (Cache HMBird Patch)
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/hmbird_patch.c
          key: hmbird-patch-v1
          restore-keys: |
            hmbird-patch-v1

      - name: üöÄ Â∫îÁî® HMBird Ë°•‰∏Å (Apply HMBird patch)
        run: |
          PATCH_FILE="${{ runner.temp }}/hmbird_patch.c"
          if [ ! -f "$PATCH_FILE" ]; then
            if [ -f "${GITHUB_WORKSPACE}/hmbird_patch.c" ]; then
              echo "üì• Âä†ËΩΩHMBirdË°•‰∏Å"
              cp "${GITHUB_WORKSPACE}/hmbird_patch.c" "$PATCH_FILE"
            else
              echo "::error ::hmbird_patch.c not found in ${GITHUB_WORKSPACE}"
              exit 1
            fi
          fi
          
          cd kernel_workspace/kernel_platform/common/drivers
          cp "$PATCH_FILE" hmbird_patch.c
          
          if ! grep -q "hmbird_patch.o" Makefile; then
            echo "obj-y += hmbird_patch.o" >> Makefile
          fi
          echo "‚úîÔ∏è HMBirdË°•‰∏ÅÂ∫îÁî®ÂÆåÊàê"

      - name: üì• ËÆæÁΩÆÁºñËØëÁéØÂ¢É (Set Up Build Environment)
        run: |
          cd kernel_workspace/kernel_platform
          CONFIG_FILE=./common/arch/arm64/configs/gki_defconfig
          # üìåSukiSU Ultra
          echo "CONFIG_KSU=y" >> "$CONFIG_FILE"
          # üìåKPM
          if [ "${{ github.event.inputs.enable_feature_kpm }}" = "true" ]; then
            echo "CONFIG_KPM=y" >> "$CONFIG_FILE"
          fi
          # üìåVFS
          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_MANUAL_HOOK=y" >> "$CONFIG_FILE"
          # üìåSUSFS
          echo "CONFIG_KSU_SUSFS=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> "$CONFIG_FILE"
          # üìåBBR
          if [ "${{ github.event.inputs.enable_feature_bbr }}" = "true" ]; then
            echo "CONFIG_TCP_CONG_ADVANCED=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_TCP_CONG_BBR=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_NET_SCH_FQ=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_TCP_CONG_BIC=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_TCP_CONG_CUBIC=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_TCP_CONG_WESTWOOD=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_TCP_CONG_HTCP=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_DEFAULT_TCP_CONG=bbr" >> ./common/arch/arm64/configs/gki_defconfig
          fi
          # üìåRemove check_defconfig
          sudo sed -i 's/check_defconfig//' ./common/build.config.gki
          cd common
          git add -A && git commit -a -m "BUILD Kernel"

      - name: üõ†Ô∏è ËÆæÁΩÆÂÜÖÊ†∏ÂêçÁß∞ (Set Kernel Name)
        run: |
          DEFAULT_SUFFIX="-android15-8-g302cb15749a8-ab13157299-4k"
          echo "ÂΩìÂâçÊú∫Âûã: ${{ env.DEVICE_NAME }}"
          echo "ÈªòËÆ§ÂêéÁºÄ: $DEFAULT_SUFFIX"
          ESCAPED_SUFFIX=$(printf '%s\n' "$DEFAULT_SUFFIX" | sed 's:[\/&]:\\&:g')
          sudo sed -i "s/-4k/$ESCAPED_SUFFIX/g" ./common/arch/arm64/configs/gki_defconfig
          sed -i 's/${scm_version}//' ./common/scripts/setlocalversion

      - name: üõ†Ô∏è ÁºñËØëÂÜÖÊ†∏ (Build Kernel)
        run: |
          export KBUILD_BUILD_TIMESTAMP="${{ env.KERNEL_TIME }}"
          export PATH="$GITHUB_WORKSPACE/kernel_workspace/kernel_platform/prebuilts/clang/host/linux-x86/clang-r510928/bin:$PATH"
          export PATH="/usr/lib/ccache:$PATH"
          sudo apt install libelf-dev
          cd kernel_workspace/kernel_platform/common
          make -j$(nproc --all) LLVM=1 ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC="ccache clang" RUSTC=../../prebuilts/rust/linux-x86/1.73.0b/bin/rustc PAHOLE=../../prebuilts/kernel-build-tools/linux-x86/bin/pahole LD=ld.lld HOSTLD=ld.lld O=out KCFLAGS+=-O2  gki_defconfig
          make -j$(nproc --all) LLVM=1 ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC="ccache clang" RUSTC="$RUSTC_PATH" PAHOLE="$PAHOLE_PATH" LD=ld.lld HOSTLD=ld.lld O=out KCFLAGS+=-O2  Image
      
      - name: üì¶ Â∫îÁî® KPM Ë°•‰∏Å (Apply KPM Patch)
        if: ${{ github.event.inputs.enable_feature_kpm == 'true' }}
        run: |
          cd kernel_workspace/kernel_platform/common/out/arch/arm64/boot
          curl -LO https://github.com/SukiSU-Ultra/SukiSU_patch/raw/refs/heads/main/kpm/patch_linux
          chmod +x patch_linux
          ./patch_linux
          rm -f Image
          mv oImage Image
          echo "‚úîÔ∏è KPM Ë°•‰∏ÅÂ∫îÁî®ÂÆåÊàê"

      - name: üì¶ ÊâìÂåÖ AnyKernel3 (Package AnyKernel3)
        run: |
          git clone https://github.com/Kernel-SU/AnyKernel3.git --depth=1      
          rm -rf ./AnyKernel3/.git
          rm -rf ./AnyKernel3/push.sh
          cp kernel_workspace/kernel_platform/common/out/arch/arm64/boot/Image ./AnyKernel3/

      - name: ‰∏ä‰º† AnyKernel3 (Upload AnyKernel3 Package)
        uses: actions/upload-artifact@v4
        with:
          name: AK3${{ github.event.inputs.enable_feature_kpm == 'true' && '_KPM' || '' }}_${{ env.KSUVER }}_${{ env.DEVICE_NAME }}_SukiSu
          path: ./AnyKernel3/*